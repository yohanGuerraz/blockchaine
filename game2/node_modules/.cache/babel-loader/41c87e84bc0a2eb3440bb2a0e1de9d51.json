{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport MemoryToken from '../abis/MemoryToken.json';\nimport brain from '../brain.png';\nvar CARD_ARRAY = [{\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}, {\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  cardArray: CARD_ARRAY.sort(function () {\n                    return 0.5 - Math.random();\n                  })\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, token, totalSupply, balanceOf, i, id, tokenURI;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[1]\n                }); // Load smart contract\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = MemoryToken.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 36;\n                  break;\n                }\n\n                abi = MemoryToken.abi;\n                console.log(abi);\n                address = networkData.address;\n                token = new web3.eth.Contract(abi, address);\n                this.setState({\n                  token: token\n                });\n                _context3.next = 17;\n                return token.methods.totalSupply().call();\n\n              case 17:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                }); // Load Tokens\n\n                _context3.next = 21;\n                return token.methods.balanceOf(accounts[1]).call();\n\n              case 21:\n                balanceOf = _context3.sent;\n                i = 0;\n\n              case 23:\n                if (!(i < balanceOf)) {\n                  _context3.next = 34;\n                  break;\n                }\n\n                _context3.next = 26;\n                return token.methods.tokenOfOwnerByIndex(accounts[1], i).call();\n\n              case 26:\n                id = _context3.sent;\n                _context3.next = 29;\n                return token.methods.tokenURI(id).call();\n\n              case 29:\n                tokenURI = _context3.sent;\n                this.setState({\n                  tokenURIs: [].concat(_toConsumableArray(this.state.tokenURIs), [tokenURI])\n                });\n\n              case 31:\n                i++;\n                _context3.next = 23;\n                break;\n\n              case 34:\n                _context3.next = 37;\n                break;\n\n              case 36:\n                alert('Smart contract not deployed to detected network.');\n\n              case 37:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n    /*choix de l'image*/\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.chooseImage = function (cardId) {\n      cardId = cardId.toString();\n\n      if (_this.state.cardsWon.includes(cardId)) {\n        return window.location.origin + '/images/white.png';\n      } else if (_this.state.cardsChosenId.includes(cardId)) {\n        return CARD_ARRAY[cardId].img;\n      } else {\n        return window.location.origin + '/images/blank.png';\n      }\n    };\n\n    _this.flipCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cardId) {\n        var alreadyChosen;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                alreadyChosen = _this.state.cardsChosen.length;\n\n                _this.setState({\n                  cardsChosen: [].concat(_toConsumableArray(_this.state.cardsChosen), [_this.state.cardArray[cardId].name]),\n                  cardsChosenId: [].concat(_toConsumableArray(_this.state.cardsChosenId), [cardId])\n                });\n\n                if (alreadyChosen === 1) {\n                  setTimeout(_this.checkForMatch, 100);\n                }\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.checkForMatch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var optionOneId, optionTwoId;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              optionOneId = _this.state.cardsChosenId[0];\n              optionTwoId = _this.state.cardsChosenId[1];\n\n              if (optionOneId == optionTwoId) {\n                alert('tu as clicke sur la meme image!');\n              } else if (_this.state.cardsChosen[0] === _this.state.cardsChosen[1]) {\n                alert('tu as trouvé une paire');\n\n                _this.state.token.methods.mint(_this.state.account, window.location.origin + CARD_ARRAY[optionOneId].img.toString()).send({\n                  from: _this.state.account\n                }).on('transactionHash', function (hash) {\n                  _this.setState({\n                    cardsWon: [].concat(_toConsumableArray(_this.state.cardsWon), [optionOneId, optionTwoId]),\n                    tokenURIs: [].concat(_toConsumableArray(_this.state.tokenURIs), [CARD_ARRAY[optionOneId].img])\n                  });\n                });\n              } else {\n                alert('Sorry, essaie encore');\n              }\n\n              _this.setState({\n                cardsChosen: [],\n                cardsChosenId: []\n              });\n\n              if (_this.state.cardsWon.length === CARD_ARRAY.length) {\n                alert('Congratulations! tu les a tous trouver!');\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.state = {\n      account: '0x0',\n      token: null,\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"https://lesjoiesducode.fr/meme-combat\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: brain,\n        width: \"30\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }), \"\\xA0 Memory Tokens\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 45\n        }\n      }, this.state.account))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"d-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, \"Start matching now!\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, this.state.cardArray.map(function (card, key) {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          key: key,\n          src: _this2.chooseImage(key),\n          \"data-id\": key,\n          onClick: function onClick(event) {\n            var cardId = event.target.getAttribute('data-id');\n\n            if (!_this2.state.cardsWon.includes(cardId.toString())) {\n              _this2.flipCard(cardId);\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 23\n          }\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }, \"Tokens Collect\\xE9:\", /*#__PURE__*/React.createElement(\"span\", {\n        id: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 39\n        }\n      }, \"\\xA0\", this.state.tokenURIs.length)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }, this.state.tokenURIs.map(function (tokenURI, key) {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          key: key,\n          src: tokenURI,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }\n        });\n      }))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Guerraz Yohan/Desktop/game2/src/components/App.js"],"names":["React","Component","Web3","ethers","MemoryToken","brain","CARD_ARRAY","name","img","App","loadWeb3","loadBlockchainData","setState","cardArray","sort","Math","random","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","net","getId","networkId","networkData","networks","abi","console","log","address","token","Contract","methods","totalSupply","call","balanceOf","i","tokenOfOwnerByIndex","id","tokenURI","tokenURIs","state","props","chooseImage","cardId","toString","cardsWon","includes","location","origin","cardsChosenId","flipCard","alreadyChosen","cardsChosen","length","setTimeout","checkForMatch","optionOneId","optionTwoId","mint","send","from","on","hash","map","card","key","event","target","getAttribute"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,IAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CADiB,EAKjB;AACED,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CALiB,EASjB;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CATiB,EAajB;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CAbiB,EAiBjB;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CAjBiB,EAqBjB;AACED,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CArBiB,EAyBjB;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CAzBiB,EA6BjB;AACED,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CA7BiB,EAiCjB;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CAjCiB,EAqCjB;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CArCiB,EAyCjB;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CAzCiB,EA6CjB;AACED,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CA7CiB,CAAnB;;IAmDMC,G;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,SAAS,EAAEP,UAAU,CAACQ,IAAX,CAAgB;AAAA,2BAAM,MAAMC,IAAI,CAACC,MAAL,EAAZ;AAAA,mBAAhB;AAAb,iBAAd;;;;;;;;;;;;;;;;;;;;;;;;qBAIIC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIjB,IAAJ,CAASe,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAOH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIjB,IAAJ,CAASe,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAGA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACGA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKb,QAAL,CAAc;AAAEc,kBAAAA,OAAO,EAAED,QAAQ,CAAC,CAAD;AAAnB,iBAAd,E,CAEA;;;uBACwBN,IAAI,CAACI,GAAL,CAASI,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,W,GAAc1B,WAAW,CAAC2B,QAAZ,CAAqBF,SAArB,C;;qBACjBC,W;;;;;AACKE,gBAAAA,G,GAAM5B,WAAW,CAAC4B,G;AACxBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACMG,gBAAAA,O,GAAUL,WAAW,CAACK,O;AACtBC,gBAAAA,K,GAAQ,IAAIjB,IAAI,CAACI,GAAL,CAASc,QAAb,CAAsBL,GAAtB,EAA2BG,OAA3B,C;AACd,qBAAKvB,QAAL,CAAc;AAAEwB,kBAAAA,KAAK,EAALA;AAAF,iBAAd;;uBAC0BA,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4BC,IAA5B,E;;;AAApBD,gBAAAA,W;AACN,qBAAK3B,QAAL,CAAc;AAAE2B,kBAAAA,WAAW,EAAXA;AAAF,iBAAd,E,CACA;;;uBACsBH,KAAK,CAACE,OAAN,CAAcG,SAAd,CAAwBhB,QAAQ,CAAC,CAAD,CAAhC,EAAqCe,IAArC,E;;;AAAlBC,gBAAAA,S;AACKC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,GAAGD,S;;;;;;uBACHL,KAAK,CAACE,OAAN,CAAcK,mBAAd,CAAkClB,QAAQ,CAAC,CAAD,CAA1C,EAA+CiB,CAA/C,EAAkDF,IAAlD,E;;;AAAXI,gBAAAA,E;;uBACiBR,KAAK,CAACE,OAAN,CAAcO,QAAd,CAAuBD,EAAvB,EAA2BJ,IAA3B,E;;;AAAjBK,gBAAAA,Q;AACJ,qBAAKjC,QAAL,CAAc;AACZkC,kBAAAA,SAAS,+BAAM,KAAKC,KAAL,CAAWD,SAAjB,IAA4BD,QAA5B;AADG,iBAAd;;;AAH6BH,gBAAAA,CAAC,E;;;;;;;;;AAQhCpB,gBAAAA,KAAK,CAAC,kDAAD,CAAL;;;;;;;;;;;;;;;;AAGJ;;;;AA0DA,eAAY0B,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAzDnBC,WAyDmB,GAzDL,UAACC,MAAD,EAAY;AACxBA,MAAAA,MAAM,GAAGA,MAAM,CAACC,QAAP,EAAT;;AACA,UAAG,MAAKJ,KAAL,CAAWK,QAAX,CAAoBC,QAApB,CAA6BH,MAA7B,CAAH,EAAyC;AACvC,eAAOjC,MAAM,CAACqC,QAAP,CAAgBC,MAAhB,GAAyB,mBAAhC;AACD,OAFD,MAGK,IAAG,MAAKR,KAAL,CAAWS,aAAX,CAAyBH,QAAzB,CAAkCH,MAAlC,CAAH,EAA8C;AACjD,eAAO5C,UAAU,CAAC4C,MAAD,CAAV,CAAmB1C,GAA1B;AACD,OAFI,MAEE;AACL,eAAOS,MAAM,CAACqC,QAAP,CAAgBC,MAAhB,GAAyB,mBAAhC;AACD;AACF,KA+CkB;;AAAA,UA7CnBE,QA6CmB;AAAA,0EA7CR,kBAAOP,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLQ,gBAAAA,aADK,GACW,MAAKX,KAAL,CAAWY,WAAX,CAAuBC,MADlC;;AAGT,sBAAKhD,QAAL,CAAc;AACZ+C,kBAAAA,WAAW,+BAAM,MAAKZ,KAAL,CAAWY,WAAjB,IAA8B,MAAKZ,KAAL,CAAWlC,SAAX,CAAqBqC,MAArB,EAA6B3C,IAA3D,EADC;AAEZiD,kBAAAA,aAAa,+BAAM,MAAKT,KAAL,CAAWS,aAAjB,IAAgCN,MAAhC;AAFD,iBAAd;;AAKA,oBAAIQ,aAAa,KAAK,CAAtB,EAAyB;AACvBG,kBAAAA,UAAU,CAAC,MAAKC,aAAN,EAAqB,GAArB,CAAV;AACD;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA6CQ;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA/BnBA,aA+BmB,yEA/BH;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,WADQ,GACM,MAAKhB,KAAL,CAAWS,aAAX,CAAyB,CAAzB,CADN;AAERQ,cAAAA,WAFQ,GAEM,MAAKjB,KAAL,CAAWS,aAAX,CAAyB,CAAzB,CAFN;;AAId,kBAAGO,WAAW,IAAIC,WAAlB,EAA+B;AAC7B1C,gBAAAA,KAAK,CAAC,iCAAD,CAAL;AACD,eAFD,MAEO,IAAI,MAAKyB,KAAL,CAAWY,WAAX,CAAuB,CAAvB,MAA8B,MAAKZ,KAAL,CAAWY,WAAX,CAAuB,CAAvB,CAAlC,EAA6D;AAClErC,gBAAAA,KAAK,CAAC,wBAAD,CAAL;;AACA,sBAAKyB,KAAL,CAAWX,KAAX,CAAiBE,OAAjB,CAAyB2B,IAAzB,CACE,MAAKlB,KAAL,CAAWrB,OADb,EAEET,MAAM,CAACqC,QAAP,CAAgBC,MAAhB,GAAyBjD,UAAU,CAACyD,WAAD,CAAV,CAAwBvD,GAAxB,CAA4B2C,QAA5B,EAF3B,EAICe,IAJD,CAIM;AAAEC,kBAAAA,IAAI,EAAE,MAAKpB,KAAL,CAAWrB;AAAnB,iBAJN,EAKC0C,EALD,CAKI,iBALJ,EAKuB,UAACC,IAAD,EAAU;AAC/B,wBAAKzD,QAAL,CAAc;AACZwC,oBAAAA,QAAQ,+BAAM,MAAKL,KAAL,CAAWK,QAAjB,IAA2BW,WAA3B,EAAwCC,WAAxC,EADI;AAEZlB,oBAAAA,SAAS,+BAAM,MAAKC,KAAL,CAAWD,SAAjB,IAA4BxC,UAAU,CAACyD,WAAD,CAAV,CAAwBvD,GAApD;AAFG,mBAAd;AAID,iBAVD;AAWD,eAbM,MAaA;AACLc,gBAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;;AACD,oBAAKV,QAAL,CAAc;AACZ+C,gBAAAA,WAAW,EAAE,EADD;AAEZH,gBAAAA,aAAa,EAAE;AAFH,eAAd;;AAIA,kBAAI,MAAKT,KAAL,CAAWK,QAAX,CAAoBQ,MAApB,KAA+BtD,UAAU,CAACsD,MAA9C,EAAsD;AACpDtC,gBAAAA,KAAK,CAAC,yCAAD,CAAL;AACD;;AA5Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA+BG;AAEjB,UAAKyB,KAAL,GAAa;AACXrB,MAAAA,OAAO,EAAE,KADE;AAEXU,MAAAA,KAAK,EAAE,IAFI;AAGXG,MAAAA,WAAW,EAAE,CAHF;AAIXO,MAAAA,SAAS,EAAE,EAJA;AAKXjC,MAAAA,SAAS,EAAE,EALA;AAMX8C,MAAAA,WAAW,EAAE,EANF;AAOXH,MAAAA,aAAa,EAAE,EAPJ;AAQXJ,MAAAA,QAAQ,EAAE;AARC,KAAb;AAFiB;AAYlB;;;;6BAEQ;AAAA;;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,qCADZ;AAEE,QAAA,IAAI,EAAC,uCAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMA;AAAK,QAAA,GAAG,EAAE/C,KAAV;AAAiB,QAAA,KAAK,EAAC,IAAvB;AAA4B,QAAA,MAAM,EAAC,IAAnC;AAAwC,QAAA,SAAS,EAAC,0BAAlD;AAA6E,QAAA,GAAG,EAAC,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,uBADF,eAUE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8B;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB,KAAK0C,KAAL,CAAWrB,OAA/B,CAA9B,CADF,CADF,CAVF,CADF,eAiBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKqB,KAAL,CAAWlC,SAAX,CAAqByD,GAArB,CAAyB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACxC,4BACE;AACE,UAAA,GAAG,EAAEA,GADP;AAEE,UAAA,GAAG,EAAE,MAAI,CAACvB,WAAL,CAAiBuB,GAAjB,CAFP;AAGE,qBAASA,GAHX;AAIE,UAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClB,gBAAIvB,MAAM,GAAGuB,KAAK,CAACC,MAAN,CAAaC,YAAb,CAA0B,SAA1B,CAAb;;AACA,gBAAG,CAAC,MAAI,CAAC5B,KAAL,CAAWK,QAAX,CAAoBC,QAApB,CAA6BH,MAAM,CAACC,QAAP,EAA7B,CAAJ,EAAqD;AACnD,cAAA,MAAI,CAACM,QAAL,CAAcP,MAAd;AACD;AACF,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,OAdC,CAFJ,CAHF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAoB;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyB,KAAKH,KAAL,CAAWD,SAAX,CAAqBc,MAA9C,CAApB,CAFF,eAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKb,KAAL,CAAWD,SAAX,CAAqBwB,GAArB,CAAyB,UAACzB,QAAD,EAAW2B,GAAX,EAAmB;AAC5C,4BACE;AACE,UAAA,GAAG,EAAEA,GADP;AAEE,UAAA,GAAG,EAAE3B,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OAPC,CAFJ,CAHF,CAxBF,CADF,CADF,CADF,CAjBF,CADF;AAsED;;;;EAtMe5C,S;;AAyMlB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport {ethers} from 'ethers'\nimport './App.css';\nimport MemoryToken from '../abis/MemoryToken.json'\nimport brain from '../brain.png'\n\nconst CARD_ARRAY = [\n  {\n    name: 'fries',\n    img: '/images/fries.png'\n  },\n  {\n    name: 'cheeseburger',\n    img: '/images/cheeseburger.png'\n  },\n  {\n    name: 'ice-cream',\n    img: '/images/ice-cream.png'\n  },\n  {\n    name: 'pizza',\n    img: '/images/pizza.png'\n  },\n  {\n    name: 'milkshake',\n    img: '/images/milkshake.png'\n  },\n  {\n    name: 'hotdog',\n    img: '/images/hotdog.png'\n  },\n  {\n    name: 'fries',\n    img: '/images/fries.png'\n  },\n  {\n    name: 'cheeseburger',\n    img: '/images/cheeseburger.png'\n  },\n  {\n    name: 'ice-cream',\n    img: '/images/ice-cream.png'\n  },\n  {\n    name: 'pizza',\n    img: '/images/pizza.png'\n  },\n  {\n    name: 'milkshake',\n    img: '/images/milkshake.png'\n  },\n  {\n    name: 'hotdog',\n    img: '/images/hotdog.png'\n  }\n]\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    this.setState({ cardArray: CARD_ARRAY.sort(() => 0.5 - Math.random()) })\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n      //const provider = new ethers.providers.Web3Provider(window.ethereum)\n      // await provider.send(\"eth_requestAccounts\", [])\n      // const signer = provider.getSigner()\n      // const memoryToken = new ethers.Contract()\n      //await window.ethereum.send(\"eth_requestAccounts\", [])\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[1] })\n\n    // Load smart contract\n    const networkId = await web3.eth.net.getId()\n    const networkData = MemoryToken.networks[networkId]\n    if(networkData) {\n      const abi = MemoryToken.abi\n      console.log(abi);\n      const address = networkData.address\n      const token = new web3.eth.Contract(abi, address)\n      this.setState({ token })\n      const totalSupply = await token.methods.totalSupply().call()\n      this.setState({ totalSupply })\n      // Load Tokens\n      let balanceOf = await token.methods.balanceOf(accounts[1]).call()\n      for (let i = 0; i < balanceOf; i++) {\n        let id = await token.methods.tokenOfOwnerByIndex(accounts[1], i).call()\n        let tokenURI = await token.methods.tokenURI(id).call()\n        this.setState({\n          tokenURIs: [...this.state.tokenURIs, tokenURI]\n        })\n      }\n    } else {\n      alert('Smart contract not deployed to detected network.')\n    }\n  }\n  /*choix de l'image*/\n  chooseImage = (cardId) => {\n    cardId = cardId.toString()\n    if(this.state.cardsWon.includes(cardId)) {\n      return window.location.origin + '/images/white.png'\n    }\n    else if(this.state.cardsChosenId.includes(cardId)) {\n      return CARD_ARRAY[cardId].img\n    } else {\n      return window.location.origin + '/images/blank.png'\n    }\n  }\n  /*image retourner*/\n  flipCard = async (cardId) => {\n    let alreadyChosen = this.state.cardsChosen.length\n\n    this.setState({\n      cardsChosen: [...this.state.cardsChosen, this.state.cardArray[cardId].name],\n      cardsChosenId: [...this.state.cardsChosenId, cardId]\n    })\n\n    if (alreadyChosen === 1) {\n      setTimeout(this.checkForMatch, 100)\n    }\n  }\n\n\n  checkForMatch = async () => {\n    const optionOneId = this.state.cardsChosenId[0]\n    const optionTwoId = this.state.cardsChosenId[1]\n\n    if(optionOneId == optionTwoId) {\n      alert('tu as clicke sur la meme image!')\n    } else if (this.state.cardsChosen[0] === this.state.cardsChosen[1]) {\n      alert('tu as trouvé une paire')\n      this.state.token.methods.mint(\n        this.state.account,\n        window.location.origin + CARD_ARRAY[optionOneId].img.toString()\n      )\n      .send({ from: this.state.account })\n      .on('transactionHash', (hash) => {\n        this.setState({\n          cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\n          tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\n        })\n      })\n    } else {\n      alert('Sorry, essaie encore')\n    }\n    this.setState({\n      cardsChosen: [],\n      cardsChosenId: []\n    })\n    if (this.state.cardsWon.length === CARD_ARRAY.length) {\n      alert('Congratulations! tu les a tous trouver!')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      token: null,\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: []\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"https://lesjoiesducode.fr/meme-combat\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n          <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n          &nbsp; Memory Tokens\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <h1 className=\"d-4\">Start matching now!</h1>\n\n                <div className=\"grid mb-4\" >\n\n                  { this.state.cardArray.map((card, key) => {\n                    return(\n                      <img\n                        key={key}\n                        src={this.chooseImage(key)}\n                        data-id={key}\n                        onClick={(event) => {\n                          let cardId = event.target.getAttribute('data-id')\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\n                            this.flipCard(cardId)\n                          }\n                        }}\n                      />\n                    )\n                  })}\n\n\n                </div>\n\n                <div>\n                  {/*Sert a afficher les tokens recuperer par le joueur*/}\n                  <h5>Tokens Collecté:<span id=\"result\">&nbsp;{this.state.tokenURIs.length}</span></h5>\n                  <div className=\"grid mb-4\" >\n\n                    { this.state.tokenURIs.map((tokenURI, key) => {\n                      return(\n                        <img\n                          key={key}\n                          src={tokenURI}\n                        />\n                      )\n                    })}\n\n                  </div>\n\n                </div>\n\n              </div>\n\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}