{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\node_modules\\\\url-loader\\\\dist\\\\cjs.js??ref--6-oneOf-0!C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\src\\\\brain.png\",\"C:/Users/Guerraz Yohan/Desktop/game2/src/components/App.js\",\"C:/Users/Guerraz Yohan/Desktop/game2/src/serviceWorker.js\",\"C:/Users/Guerraz Yohan/Desktop/game2/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"CARD_ARRAY\",\"name\",\"img\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"chooseImage\",\"cardId\",\"toString\",\"state\",\"cardsWon\",\"includes\",\"window\",\"location\",\"origin\",\"cardsChosenId\",\"flipCard\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"a\",\"mark\",\"_callee4\",\"alreadyChosen\",\"wrap\",\"_context4\",\"prev\",\"next\",\"cardsChosen\",\"length\",\"setState\",\"concat\",\"toConsumableArray\",\"cardArray\",\"setTimeout\",\"checkForMatch\",\"stop\",\"_x\",\"apply\",\"arguments\",\"_callee5\",\"optionOneId\",\"optionTwoId\",\"_context5\",\"alert\",\"token\",\"methods\",\"mint\",\"account\",\"send\",\"from\",\"on\",\"hash\",\"tokenURIs\",\"totalSupply\",\"loadWeb3\",\"loadBlockchainData\",\"sort\",\"Math\",\"random\",\"ethereum\",\"web3\",\"Web3\",\"enable\",\"currentProvider\",\"eth\",\"getAccounts\",\"accounts\",\"net\",\"getId\",\"networkId\",\"networkData\",\"MemoryToken\",\"networks\",\"abi\",\"address\",\"Contract\",\"balanceOf\",\"i\",\"tokenOfOwnerByIndex\",\"id\",\"tokenURI\",\"_this2\",\"react_default\",\"createElement\",\"className\",\"href\",\"target\",\"rel\",\"src\",\"brain\",\"width\",\"height\",\"alt\",\"role\",\"map\",\"card\",\"key\",\"data-id\",\"onClick\",\"event\",\"getAttribute\",\"Component\",\"Boolean\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/brain.45a2f0b8.png\\\";\",\"import React, { Component } from 'react';\\nimport Web3 from 'web3'\\nimport './App.css';\\nimport MemoryToken from '../abis/MemoryToken.json'\\nimport brain from '../brain.png'\\n\\nconst CARD_ARRAY = [\\n  {\\n    name: 'fries',\\n    img: '/images/fries.png'\\n  },\\n  {\\n    name: 'cheeseburger',\\n    img: '/images/cheeseburger.png'\\n  },\\n  {\\n    name: 'ice-cream',\\n    img: '/images/ice-cream.png'\\n  },\\n  {\\n    name: 'pizza',\\n    img: '/images/pizza.png'\\n  },\\n  {\\n    name: 'milkshake',\\n    img: '/images/milkshake.png'\\n  },\\n  {\\n    name: 'hotdog',\\n    img: '/images/hotdog.png'\\n  },\\n  {\\n    name: 'fries',\\n    img: '/images/fries.png'\\n  },\\n  {\\n    name: 'cheeseburger',\\n    img: '/images/cheeseburger.png'\\n  },\\n  {\\n    name: 'ice-cream',\\n    img: '/images/ice-cream.png'\\n  },\\n  {\\n    name: 'pizza',\\n    img: '/images/pizza.png'\\n  },\\n  {\\n    name: 'milkshake',\\n    img: '/images/milkshake.png'\\n  },\\n  {\\n    name: 'hotdog',\\n    img: '/images/hotdog.png'\\n  }\\n]\\n\\nclass App extends Component {\\n\\n  async componentWillMount() {\\n    await this.loadWeb3()\\n    await this.loadBlockchainData()\\n    this.setState({ cardArray: CARD_ARRAY.sort(() => 0.5 - Math.random()) })\\n  }\\n\\n  async loadWeb3() {\\n    if (window.ethereum) {\\n      window.web3 = new Web3(window.ethereum)\\n      await window.ethereum.enable()\\n    }\\n    else if (window.web3) {\\n      window.web3 = new Web3(window.web3.currentProvider)\\n    }\\n    else {\\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\\n    }\\n  }\\n\\n  async loadBlockchainData() {\\n    const web3 = window.web3\\n    const accounts = await web3.eth.getAccounts()\\n    this.setState({ account: accounts[0] })\\n\\n    // Load smart contract\\n    const networkId = await web3.eth.net.getId()\\n    const networkData = MemoryToken.networks[networkId]\\n    if(networkData) {\\n      const abi = MemoryToken.abi\\n      const address = networkData.address\\n      const token = new web3.eth.Contract(abi, address)\\n      this.setState({ token })\\n      const totalSupply = await token.methods.totalSupply().call()\\n      this.setState({ totalSupply })\\n      // Load Tokens\\n      let balanceOf = await token.methods.balanceOf(accounts[0]).call()\\n      for (let i = 0; i < balanceOf; i++) {\\n        let id = await token.methods.tokenOfOwnerByIndex(accounts[0], i).call()\\n        let tokenURI = await token.methods.tokenURI(id).call()\\n        this.setState({\\n          tokenURIs: [...this.state.tokenURIs, tokenURI]\\n        })\\n      }\\n    } else {\\n      alert('Smart contract not deployed to detected network.')\\n    }\\n  }\\n  /*choix de l'image*/\\n  chooseImage = (cardId) => {\\n    cardId = cardId.toString()\\n    if(this.state.cardsWon.includes(cardId)) {\\n      return window.location.origin + '/images/white.png'\\n    }\\n    else if(this.state.cardsChosenId.includes(cardId)) {\\n      return CARD_ARRAY[cardId].img\\n    } else {\\n      return window.location.origin + '/images/blank.png'\\n    }\\n  }\\n  /*image retourner*/\\n  flipCard = async (cardId) => {\\n    let alreadyChosen = this.state.cardsChosen.length\\n\\n    this.setState({\\n      cardsChosen: [...this.state.cardsChosen, this.state.cardArray[cardId].name],\\n      cardsChosenId: [...this.state.cardsChosenId, cardId]\\n    })\\n\\n    if (alreadyChosen === 1) {\\n      setTimeout(this.checkForMatch, 100)\\n    }\\n  }\\n\\n\\n  checkForMatch = async () => {\\n    const optionOneId = this.state.cardsChosenId[0]\\n    const optionTwoId = this.state.cardsChosenId[1]\\n\\n    if(optionOneId == optionTwoId) {\\n      alert('tu as clicke sur la meme image!')\\n    } else if (this.state.cardsChosen[0] === this.state.cardsChosen[1]) {\\n      alert('tu as trouvé une paire')\\n      this.state.token.methods.mint(\\n        this.state.account,\\n        window.location.origin + CARD_ARRAY[optionOneId].img.toString()\\n      )\\n      .send({ from: this.state.account })\\n      .on('transactionHash', (hash) => {\\n        this.setState({\\n          cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\\n          tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\\n        })\\n      })\\n    } else {\\n      alert('Sorry, essaie encore')\\n    }\\n    this.setState({\\n      cardsChosen: [],\\n      cardsChosenId: []\\n    })\\n    if (this.state.cardsWon.length === CARD_ARRAY.length) {\\n      alert('Congratulations! tu les a tous trouver!')\\n    }\\n  }\\n\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      account: '0x0',\\n      token: null,\\n      totalSupply: 0,\\n      tokenURIs: [],\\n      cardArray: [],\\n      cardsChosen: [],\\n      cardsChosenId: [],\\n      cardsWon: []\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <nav className=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n          <a\\n            className=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\"\\n            href=\\\"https://lesjoiesducode.fr/meme-combat\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n          <img src={brain} width=\\\"30\\\" height=\\\"30\\\" className=\\\"d-inline-block align-top\\\" alt=\\\"\\\" />\\n          &nbsp; Memory Tokens\\n          </a>\\n          <ul className=\\\"navbar-nav px-3\\\">\\n            <li className=\\\"nav-item text-nowrap d-none d-sm-none d-sm-block\\\">\\n              <small className=\\\"text-muted\\\"><span id=\\\"account\\\">{this.state.account}</span></small>\\n            </li>\\n          </ul>\\n        </nav>\\n        <div className=\\\"container-fluid mt-5\\\">\\n          <div className=\\\"row\\\">\\n            <main role=\\\"main\\\" className=\\\"col-lg-12 d-flex text-center\\\">\\n              <div className=\\\"content mr-auto ml-auto\\\">\\n                <h1 className=\\\"d-4\\\">Start matching now!</h1>\\n\\n                <div className=\\\"grid mb-4\\\" >\\n\\n                  { this.state.cardArray.map((card, key) => {\\n                    return(\\n                      <img\\n                        key={key}\\n                        src={this.chooseImage(key)}\\n                        data-id={key}\\n                        onClick={(event) => {\\n                          let cardId = event.target.getAttribute('data-id')\\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\\n                            this.flipCard(cardId)\\n                          }\\n                        }}\\n                      />\\n                    )\\n                  })}\\n\\n\\n                </div>\\n\\n                <div>\\n                  {/*Sert a afficher les tokens recuperer par le joueur*/}\\n                  <h5>Tokens Collecté:<span id=\\\"result\\\">&nbsp;{this.state.tokenURIs.length}</span></h5>\\n                  <div className=\\\"grid mb-4\\\" >\\n\\n                    { this.state.tokenURIs.map((tokenURI, key) => {\\n                      return(\\n                        <img\\n                          key={key}\\n                          src={tokenURI}\\n                        />\\n                      )\\n                    })}\\n\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n\\n            </main>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport 'bootstrap/dist/css/bootstrap.css'\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{119:function(e){e.exports={contractName:\"MemoryToken\",abi:[{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"approved\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"ApprovalForAll\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"from\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"to\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"},{constant:!1,inputs:[{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"approve\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"}],name:\"balanceOf\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"getApproved\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"},{internalType:\"address\",name:\"operator\",type:\"address\"}],name:\"isApprovedForAll\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"name\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"ownerOf\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"safeTransferFrom\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"safeTransferFrom\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"setApprovalForAll\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{internalType:\"bytes4\",name:\"interfaceId\",type:\"bytes4\"}],name:\"supportsInterface\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"symbol\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{internalType:\"uint256\",name:\"index\",type:\"uint256\"}],name:\"tokenByIndex\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"},{internalType:\"uint256\",name:\"index\",type:\"uint256\"}],name:\"tokenOfOwnerByIndex\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"tokenURI\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"totalSupply\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"transferFrom\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"}],metadata:'{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\\\"onERC721Received(address,address,uint256,bytes)\\\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\\\"onERC721Received(address,address,uint256,bytes)\\\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/MemoryToken.sol\":\"MemoryToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ERC721Full.sol\":{\"keccak256\":\"0x2c9428b26856816aabc93836bad491818b513ebb65e79dd96b78f994bbce3c6f\",\"urls\":[\"bzz-raw://df88a09cdb67f443c89908d0b1ec154f6e5a4b0b2177580d9d2eae8d0e3d9cf1\",\"dweb:/ipfs/QmWaaSeg35RuBMD2vDnTggkjfTZbgFzupQoCWHgSpC3T8U\"]},\"project:/src/contracts/MemoryToken.sol\":{\"keccak256\":\"0x50d8edce281842006e595e54409879bf98cb98c7faa4e45d6740c18fe7845cde\",\"urls\":[\"bzz-raw://6763a01874f1b61bf85626e481a54f345308a1afb9860556440e159e05697812\",\"dweb:/ipfs/QmW9mi1VbuzjijqbBStaVRkDHK398BfWkkwf1CexhsHTL3\"]}},\"version\":1}',bytecode:\"0x\",deployedBytecode:\"0x\",sourceMap:\"\",deployedSourceMap:\"\",source:'pragma solidity ^0.5.0;\\n\\nimport \"./ERC721Full.sol\";\\n\\ncontract MemoryToken is ERC721Full {\\n  // Code goes here...\\n\\n}\\n',sourcePath:\"C:\\\\Users\\\\Guerraz Yohan\\\\Desktop\\\\game2\\\\src\\\\contracts\\\\MemoryToken.sol\",ast:{absolutePath:\"project:/src/contracts/MemoryToken.sol\",exportedSymbols:{MemoryToken:[1460]},id:1461,nodeType:\"SourceUnit\",nodes:[{id:1456,literals:[\"solidity\",\"^\",\"0.5\",\".0\"],nodeType:\"PragmaDirective\",src:\"0:23:1\"},{absolutePath:\"project:/src/contracts/ERC721Full.sol\",file:\"./ERC721Full.sol\",id:1457,nodeType:\"ImportDirective\",scope:1461,sourceUnit:1455,src:\"25:26:1\",symbolAliases:[],unitAlias:\"\"},{baseContracts:[{arguments:null,baseName:{contractScope:null,id:1458,name:\"ERC721Full\",nodeType:\"UserDefinedTypeName\",referencedDeclaration:1454,src:\"77:10:1\",typeDescriptions:{typeIdentifier:\"t_contract$_ERC721Full_$1454\",typeString:\"contract ERC721Full\"}},id:1459,nodeType:\"InheritanceSpecifier\",src:\"77:10:1\"}],contractDependencies:[9,110,372,930,955,1288,1309,1434,1454],contractKind:\"contract\",documentation:null,fullyImplemented:!1,id:1460,linearizedBaseContracts:[1460,1454,1434,1309,1288,955,930,110,372,9],name:\"MemoryToken\",nodeType:\"ContractDefinition\",nodes:[],scope:1461,src:\"53:62:1\"}],src:\"0:116:1\"},legacyAST:{attributes:{absolutePath:\"project:/src/contracts/MemoryToken.sol\",exportedSymbols:{MemoryToken:[1460]}},children:[{attributes:{literals:[\"solidity\",\"^\",\"0.5\",\".0\"]},id:1456,name:\"PragmaDirective\",src:\"0:23:1\"},{attributes:{SourceUnit:1455,absolutePath:\"project:/src/contracts/ERC721Full.sol\",file:\"./ERC721Full.sol\",scope:1461,symbolAliases:[null],unitAlias:\"\"},id:1457,name:\"ImportDirective\",src:\"25:26:1\"},{attributes:{contractDependencies:[9,110,372,930,955,1288,1309,1434,1454],contractKind:\"contract\",documentation:null,fullyImplemented:!1,linearizedBaseContracts:[1460,1454,1434,1309,1288,955,930,110,372,9],name:\"MemoryToken\",nodes:[null],scope:1461},children:[{attributes:{arguments:null},children:[{attributes:{contractScope:null,name:\"ERC721Full\",referencedDeclaration:1454,type:\"contract ERC721Full\"},id:1458,name:\"UserDefinedTypeName\",src:\"77:10:1\"}],id:1459,name:\"InheritanceSpecifier\",src:\"77:10:1\"}],id:1460,name:\"ContractDefinition\",src:\"53:62:1\"}],id:1461,name:\"SourceUnit\",src:\"0:116:1\"},compiler:{name:\"solc\",version:\"0.5.16+commit.9c3226ce.Emscripten.clang\"},networks:{5777:{events:{\"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\":{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"approved\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},\"0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\":{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"ApprovalForAll\",type:\"event\"},\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\":{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"from\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"to\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"}},links:{},address:\"0x70345d54733d0590c5d628358a5E119F8e2aF46B\",transactionHash:\"0x1e25e71041a5981a5cd6e946b401ed0670648f0912dce7bd9049e1454bcc49e6\"}},schemaVersion:\"3.4.7\",updatedAt:\"2022-06-22T07:32:00.325Z\",devdoc:{methods:{\"approve(address,uint256)\":{details:\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",params:{to:\"address to be approved for the given token ID\",tokenId:\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{details:\"Gets the balance of the specified address.\",params:{owner:\"address to query the balance of\"},return:\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{details:\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",params:{tokenId:\"uint256 ID of the token to query the approval of\"},return:\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{details:\"Tells whether an operator is approved by a given owner.\",params:{operator:\"operator address which you want to query the approval of\",owner:\"owner address which you want to query the approval of\"},return:\"bool whether the given operator is approved by the given owner\"},\"name()\":{details:\"Gets the token name.\",return:\"string representing the token name\"},\"ownerOf(uint256)\":{details:\"Gets the owner of the specified token ID.\",params:{tokenId:\"uint256 ID of the token to query the owner of\"},return:\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{details:'Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator',params:{from:\"current owner of the token\",to:\"address to receive the ownership of the given token ID\",tokenId:\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{details:'Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator',params:{_data:\"bytes data to send along with a safe transfer check\",from:\"current owner of the token\",to:\"address to receive the ownership of the given token ID\",tokenId:\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{details:\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",params:{approved:\"representing the status of the approval to be set\",to:\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{details:\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{details:\"Gets the token symbol.\",return:\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{details:\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",params:{index:\"uint256 representing the index to be accessed of the tokens list\"},return:\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{details:\"Gets the token ID at a given index of the tokens list of the requested owner.\",params:{index:\"uint256 representing the index to be accessed of the requested tokens list\",owner:\"address owning the tokens list to be accessed\"},return:\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{details:\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",params:{tokenId:\"uint256 ID of the token to query\"}},\"totalSupply()\":{details:\"Gets the total amount of tokens stored by the contract.\",return:\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{details:\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",params:{from:\"current owner of the token\",to:\"address to receive the ownership of the given token ID\",tokenId:\"uint256 ID of the token to be transferred\"}}}},userdoc:{methods:{}}}},229:function(e,t,n){e.exports=n.p+\"static/media/brain.45a2f0b8.png\"},232:function(e,t,n){e.exports=n(545)},252:function(e,t){},254:function(e,t){},350:function(e,t){},390:function(e,t){},396:function(e,t){},398:function(e,t){},429:function(e,t){},431:function(e,t){},432:function(e,t){},437:function(e,t){},439:function(e,t){},446:function(e,t){},448:function(e,t){},466:function(e,t){},468:function(e,t){},480:function(e,t){},483:function(e,t){},493:function(e,t){},501:function(e,t){},530:function(e,t){},538:function(e,t){},542:function(e,t,n){},545:function(e,t,n){\"use strict\";n.r(t);var a=n(4),r=n.n(a),s=n(226),o=n.n(s),i=(n(237),n(47)),d=n(17),p=n.n(d),l=n(46),u=n(227),c=n(230),y=n(228),m=n(117),f=n(231),h=n(118),b=n.n(h),k=(n(542),n(119)),v=n(229),g=n.n(v),w=[{name:\"fries\",img:\"/images/fries.png\"},{name:\"cheeseburger\",img:\"/images/cheeseburger.png\"},{name:\"ice-cream\",img:\"/images/ice-cream.png\"},{name:\"pizza\",img:\"/images/pizza.png\"},{name:\"milkshake\",img:\"/images/milkshake.png\"},{name:\"hotdog\",img:\"/images/hotdog.png\"},{name:\"fries\",img:\"/images/fries.png\"},{name:\"cheeseburger\",img:\"/images/cheeseburger.png\"},{name:\"ice-cream\",img:\"/images/ice-cream.png\"},{name:\"pizza\",img:\"/images/pizza.png\"},{name:\"milkshake\",img:\"/images/milkshake.png\"},{name:\"hotdog\",img:\"/images/hotdog.png\"}],T=function(e){function t(e){var n;return Object(u.a)(this,t),(n=Object(c.a)(this,Object(y.a)(t).call(this,e))).chooseImage=function(e){return e=e.toString(),n.state.cardsWon.includes(e)?window.location.origin+\"/images/white.png\":n.state.cardsChosenId.includes(e)?w[e].img:window.location.origin+\"/images/blank.png\"},n.flipCard=function(){var e=Object(l.a)(p.a.mark(function e(t){var a;return p.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:a=n.state.cardsChosen.length,n.setState({cardsChosen:[].concat(Object(i.a)(n.state.cardsChosen),[n.state.cardArray[t].name]),cardsChosenId:[].concat(Object(i.a)(n.state.cardsChosenId),[t])}),1===a&&setTimeout(n.checkForMatch,100);case 3:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),n.checkForMatch=Object(l.a)(p.a.mark(function e(){var t,a;return p.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=n.state.cardsChosenId[0],a=n.state.cardsChosenId[1],t==a?alert(\"tu as clicke sur la meme image!\"):n.state.cardsChosen[0]===n.state.cardsChosen[1]?(alert(\"tu as trouv\\xe9 une paire\"),n.state.token.methods.mint(n.state.account,window.location.origin+w[t].img.toString()).send({from:n.state.account}).on(\"transactionHash\",function(e){n.setState({cardsWon:[].concat(Object(i.a)(n.state.cardsWon),[t,a]),tokenURIs:[].concat(Object(i.a)(n.state.tokenURIs),[w[t].img])})})):alert(\"Sorry, essaie encore\"),n.setState({cardsChosen:[],cardsChosenId:[]}),n.state.cardsWon.length===w.length&&alert(\"Congratulations! tu les a tous trouver!\");case 5:case\"end\":return e.stop()}},e)})),n.state={account:\"0x0\",token:null,totalSupply:0,tokenURIs:[],cardArray:[],cardsChosen:[],cardsChosenId:[],cardsWon:[]},n}return Object(f.a)(t,e),Object(m.a)(t,[{key:\"componentWillMount\",value:function(){var e=Object(l.a)(p.a.mark(function e(){return p.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.loadWeb3();case 2:return e.next=4,this.loadBlockchainData();case 4:this.setState({cardArray:w.sort(function(){return.5-Math.random()})});case 5:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"loadWeb3\",value:function(){var e=Object(l.a)(p.a.mark(function e(){return p.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!window.ethereum){e.next=6;break}return window.web3=new b.a(window.ethereum),e.next=4,window.ethereum.enable();case 4:e.next=7;break;case 6:window.web3?window.web3=new b.a(window.web3.currentProvider):window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");case 7:case\"end\":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}()},{key:\"loadBlockchainData\",value:function(){var e=Object(l.a)(p.a.mark(function e(){var t,n,a,r,s,o,d,l,u,c,y,m;return p.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=window.web3,e.next=3,t.eth.getAccounts();case 3:return n=e.sent,this.setState({account:n[0]}),e.next=7,t.eth.net.getId();case 7:if(a=e.sent,!(r=k.networks[a])){e.next=35;break}return s=k.abi,o=r.address,d=new t.eth.Contract(s,o),this.setState({token:d}),e.next=16,d.methods.totalSupply().call();case 16:return l=e.sent,this.setState({totalSupply:l}),e.next=20,d.methods.balanceOf(n[0]).call();case 20:u=e.sent,c=0;case 22:if(!(c<u)){e.next=33;break}return e.next=25,d.methods.tokenOfOwnerByIndex(n[0],c).call();case 25:return y=e.sent,e.next=28,d.methods.tokenURI(y).call();case 28:m=e.sent,this.setState({tokenURIs:[].concat(Object(i.a)(this.state.tokenURIs),[m])});case 30:c++,e.next=22;break;case 33:e.next=36;break;case 35:alert(\"Smart contract not deployed to detected network.\");case 36:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()}]),Object(m.a)(t,[{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",null,r.a.createElement(\"nav\",{className:\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\"},r.a.createElement(\"a\",{className:\"navbar-brand col-sm-3 col-md-2 mr-0\",href:\"https://lesjoiesducode.fr/meme-combat\",target:\"_blank\",rel:\"noopener noreferrer\"},r.a.createElement(\"img\",{src:g.a,width:\"30\",height:\"30\",className:\"d-inline-block align-top\",alt:\"\"}),\"\\xa0 Memory Tokens\"),r.a.createElement(\"ul\",{className:\"navbar-nav px-3\"},r.a.createElement(\"li\",{className:\"nav-item text-nowrap d-none d-sm-none d-sm-block\"},r.a.createElement(\"small\",{className:\"text-muted\"},r.a.createElement(\"span\",{id:\"account\"},this.state.account))))),r.a.createElement(\"div\",{className:\"container-fluid mt-5\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"main\",{role:\"main\",className:\"col-lg-12 d-flex text-center\"},r.a.createElement(\"div\",{className:\"content mr-auto ml-auto\"},r.a.createElement(\"h1\",{className:\"d-4\"},\"Start matching now!\"),r.a.createElement(\"div\",{className:\"grid mb-4\"},this.state.cardArray.map(function(t,n){return r.a.createElement(\"img\",{key:n,src:e.chooseImage(n),\"data-id\":n,onClick:function(t){var n=t.target.getAttribute(\"data-id\");e.state.cardsWon.includes(n.toString())||e.flipCard(n)}})})),r.a.createElement(\"div\",null,r.a.createElement(\"h5\",null,\"Tokens Collect\\xe9:\",r.a.createElement(\"span\",{id:\"result\"},\"\\xa0\",this.state.tokenURIs.length)),r.a.createElement(\"div\",{className:\"grid mb-4\"},this.state.tokenURIs.map(function(e,t){return r.a.createElement(\"img\",{key:t,src:e})}))))))))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(T,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[232,2,1]]]);","extractedComments":[]}