{"ast":null,"code":"import { useCallback, useState } from 'react';\nexport function useLocalStorage(key, defaultState) {\n  const [value, setValue] = useState(() => {\n    if (typeof localStorage === 'undefined') return defaultState;\n    const value = localStorage.getItem(key);\n\n    try {\n      return value ? JSON.parse(value) : defaultState;\n    } catch (error) {\n      console.warn(error);\n      return defaultState;\n    }\n  });\n  const setLocalStorage = useCallback(newValue => {\n    if (newValue === value) return;\n    setValue(newValue);\n\n    if (newValue === null) {\n      localStorage.removeItem(key);\n    } else {\n      try {\n        localStorage.setItem(key, JSON.stringify(newValue));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [value, setValue, key]);\n  return [value, setLocalStorage];\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAM,SAAUC,eAAV,CAA6BC,GAA7B,EAA0CC,YAA1C,EAAyD;EAC3D,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAI,MAAK;IACvC,IAAI,OAAOM,YAAP,KAAwB,WAA5B,EAAyC,OAAOH,YAAP;IAEzC,MAAMC,KAAK,GAAGE,YAAY,CAACC,OAAb,CAAqBL,GAArB,CAAd;;IACA,IAAI;MACA,OAAOE,KAAK,GAAII,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAJ,GAA8BD,YAA1C;IACH,CAFD,CAEE,OAAOO,KAAP,EAAc;MACZC,OAAO,CAACC,IAAR,CAAaF,KAAb;MACA,OAAOP,YAAP;IACH;EACJ,CAViC,CAAlC;EAYA,MAAMU,eAAe,GAAGd,WAAW,CAC9Be,QAAD,IAAgB;IACZ,IAAIA,QAAQ,KAAKV,KAAjB,EAAwB;IACxBC,QAAQ,CAACS,QAAD,CAAR;;IAEA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;MACnBR,YAAY,CAACS,UAAb,CAAwBb,GAAxB;IACH,CAFD,MAEO;MACH,IAAI;QACAI,YAAY,CAACU,OAAb,CAAqBd,GAArB,EAA0BM,IAAI,CAACS,SAAL,CAAeH,QAAf,CAA1B;MACH,CAFD,CAEE,OAAOJ,KAAP,EAAc;QACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACH;IACJ;EACJ,CAd8B,EAe/B,CAACN,KAAD,EAAQC,QAAR,EAAkBH,GAAlB,CAf+B,CAAnC;EAkBA,OAAO,CAACE,KAAD,EAAQS,eAAR,CAAP;AACH","names":["useCallback","useState","useLocalStorage","key","defaultState","value","setValue","localStorage","getItem","JSON","parse","error","console","warn","setLocalStorage","newValue","removeItem","setItem","stringify"],"sourceRoot":"","sources":["../src/useLocalStorage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}