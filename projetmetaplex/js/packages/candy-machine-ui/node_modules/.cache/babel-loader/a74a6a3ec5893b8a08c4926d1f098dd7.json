{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { BaseWalletAdapter } from './adapter';\nimport { WalletError, WalletSendTransactionError } from './errors';\nexport class BaseSignerWalletAdapter extends BaseWalletAdapter {\n  sendTransaction(transaction, connection) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return __awaiter(this, void 0, void 0, function* () {\n      let emit = true;\n\n      try {\n        try {\n          transaction.feePayer || (transaction.feePayer = this.publicKey || undefined);\n          transaction.recentBlockhash || (transaction.recentBlockhash = (yield connection.getRecentBlockhash('finalized')).blockhash);\n\n          const {\n            signers\n          } = options,\n                sendOptions = __rest(options, [\"signers\"]);\n\n          (signers === null || signers === void 0 ? void 0 : signers.length) && transaction.partialSign(...signers);\n          transaction = yield this.signTransaction(transaction);\n          const rawTransaction = transaction.serialize();\n          return yield connection.sendRawTransaction(rawTransaction, sendOptions);\n        } catch (error) {\n          // If the error was thrown by `signTransaction`, rethrow it and don't emit a duplicate event\n          if (error instanceof WalletError) {\n            emit = false;\n            throw error;\n          }\n\n          throw new WalletSendTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n      } catch (error) {\n        if (emit) {\n          this.emit('error', error);\n        }\n\n        throw error;\n      }\n    });\n  }\n\n}\nexport class BaseMessageSignerWalletAdapter extends BaseSignerWalletAdapter {}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,iBAAT,QAAyE,WAAzE;AACA,SAASC,WAAT,EAAsBC,0BAAtB,QAAwD,UAAxD;AASA,OAAM,MAAgBC,uBAAhB,SAAgDH,iBAAhD,CAAiE;EAC7DI,eAAe,CACjBC,WADiB,EAEjBC,UAFiB,EAGmB;IAAA,IAApCC,OAAoC,uEAAF,EAAE;;MAEpC,IAAIC,IAAI,GAAG,IAAX;;MACA,IAAI;QACA,IAAI;UACAH,WAAW,CAACI,QAAZ,gBAAW,CAACA,QAAZ,GAAyB,KAAKC,SAAL,IAAkBC,SAA3C;UACAN,WAAW,CAACO,eAAZ,gBAAW,CAACA,eAAZ,GAAgC,CAAC,MAAMN,UAAU,CAACO,kBAAX,CAA8B,WAA9B,CAAP,EAAmDC,SAAnF;;UAEA,MAAM;YAAEC;UAAF,IAA8BR,OAApC;UAAA,MAAoBS,WAAW,UAAKT,OAAL,EAAzB,WAAyB,CAA/B;;UAEA,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEU,MAAT,KAAmBZ,WAAW,CAACa,WAAZ,CAAwB,GAAGH,OAA3B,CAAnB;UAEAV,WAAW,GAAG,MAAM,KAAKc,eAAL,CAAqBd,WAArB,CAApB;UAEA,MAAMe,cAAc,GAAGf,WAAW,CAACgB,SAAZ,EAAvB;UAEA,OAAO,MAAMf,UAAU,CAACgB,kBAAX,CAA8BF,cAA9B,EAA8CJ,WAA9C,CAAb;QACH,CAbD,CAaE,OAAOO,KAAP,EAAmB;UACjB;UACA,IAAIA,KAAK,YAAYtB,WAArB,EAAkC;YAC9BO,IAAI,GAAG,KAAP;YACA,MAAMe,KAAN;UACH;;UACD,MAAM,IAAIrB,0BAAJ,CAA+BqB,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,OAAtC,EAA+CD,KAA/C,CAAN;QACH;MACJ,CAtBD,CAsBE,OAAOA,KAAP,EAAmB;QACjB,IAAIf,IAAJ,EAAU;UACN,KAAKA,IAAL,CAAU,OAAV,EAAmBe,KAAnB;QACH;;QACD,MAAMA,KAAN;MACH;IACJ;EAAA;;AAnCkE;AA+CvE,OAAM,MAAgBE,8BAAhB,SACMtB,uBADN,CAC6B","names":["BaseWalletAdapter","WalletError","WalletSendTransactionError","BaseSignerWalletAdapter","sendTransaction","transaction","connection","options","emit","feePayer","publicKey","undefined","recentBlockhash","getRecentBlockhash","blockhash","signers","sendOptions","length","partialSign","signTransaction","rawTransaction","serialize","sendRawTransaction","error","message","BaseMessageSignerWalletAdapter"],"sourceRoot":"","sources":["../src/signer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}