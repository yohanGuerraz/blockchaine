{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport default class Wallet extends EventEmitter {\n  constructor(provider, _network) {\n    super();\n    this._network = _network;\n    this._publicKey = null;\n    this._popup = null;\n    this._handlerAdded = false;\n    this._nextRequestId = 1;\n    this._autoApprove = false;\n    this._responsePromises = new Map();\n\n    this.handleMessage = e => {\n      var _a;\n\n      if (this._injectedProvider && e.source === window || e.origin === ((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === this._popup) {\n        if (e.data.method === 'connected') {\n          const newPublicKey = new PublicKey(e.data.params.publicKey);\n\n          if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n            if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n              this.handleDisconnect();\n            }\n\n            this._publicKey = newPublicKey;\n            this._autoApprove = !!e.data.params.autoApprove;\n            this.emit('connect', this._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          this.handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          const promises = this._responsePromises.get(e.data.id);\n\n          if (promises) {\n            const [resolve, reject] = promises;\n\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n\n    this._beforeUnload = () => {\n      void this.disconnect();\n    };\n\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: this._network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n  }\n\n  handleConnect() {\n    var _a;\n\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this.handleMessage);\n      window.addEventListener('beforeunload', this._beforeUnload);\n    }\n\n    if (this._injectedProvider) {\n      return new Promise(resolve => {\n        void this.sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n      return new Promise(resolve => {\n        this.once('connect', resolve);\n      });\n    }\n  }\n\n  handleDisconnect() {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this.handleMessage);\n      window.removeEventListener('beforeunload', this._beforeUnload);\n    }\n\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n\n    this._responsePromises.forEach((_ref, id) => {\n      let [, reject] = _ref;\n\n      this._responsePromises.delete(id);\n\n      reject(new Error('Wallet disconnected'));\n    });\n  }\n\n  sendRequest(method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (method !== 'connect' && !this.connected) {\n        throw new Error('Wallet not connected');\n      }\n\n      const requestId = this._nextRequestId;\n      ++this._nextRequestId;\n      return new Promise((resolve, reject) => {\n        var _a, _b, _c, _d;\n\n        this._responsePromises.set(requestId, [resolve, reject]);\n\n        if (this._injectedProvider) {\n          this._injectedProvider.postMessage({\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params: Object.assign({\n              network: this._network\n            }, params)\n          });\n        } else {\n          (_a = this._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params\n          }, (_c = (_b = this._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n\n          if (!this.autoApprove) {\n            (_d = this._popup) === null || _d === void 0 ? void 0 : _d.focus();\n          }\n        }\n      });\n    });\n  }\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return this._autoApprove;\n  }\n\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._popup) {\n        this._popup.close();\n      }\n\n      yield this.handleConnect();\n    });\n  }\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._injectedProvider) {\n        yield this.sendRequest('disconnect', {});\n      }\n\n      if (this._popup) {\n        this._popup.close();\n      }\n\n      this.handleDisconnect();\n    });\n  }\n\n  sign(data, display) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!(data instanceof Uint8Array)) {\n        throw new Error('Data must be an instance of Uint8Array');\n      }\n\n      const response = yield this.sendRequest('sign', {\n        data,\n        display\n      });\n      const signature = bs58.decode(response.signature);\n      const publicKey = new PublicKey(response.publicKey);\n      return {\n        signature,\n        publicKey\n      };\n    });\n  }\n\n  signTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield this.sendRequest('signTransaction', {\n        message: bs58.encode(transaction.serializeMessage())\n      });\n      const signature = bs58.decode(response.signature);\n      const publicKey = new PublicKey(response.publicKey);\n      transaction.addSignature(publicKey, signature);\n      return transaction;\n    });\n  }\n\n  signAllTransactions(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield this.sendRequest('signAllTransactions', {\n        messages: transactions.map(tx => bs58.encode(tx.serializeMessage()))\n      });\n      const signatures = response.signatures.map(s => bs58.decode(s));\n      const publicKey = new PublicKey(response.publicKey);\n      transactions = transactions.map((tx, idx) => {\n        tx.addSignature(publicKey, signatures[idx]);\n        return tx;\n      });\n      return transactions;\n    });\n  }\n\n  diffieHellman(publicKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!(publicKey instanceof Uint8Array)) {\n        throw new Error('Data must be an instance of Uint8Array');\n      }\n\n      const response = yield this.sendRequest('diffieHellman', {\n        publicKey\n      });\n      return response;\n    });\n  }\n\n}\n\nfunction isString(a) {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a) {\n  return isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function';\n}\n\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","PublicKey","bs58","Wallet","constructor","provider","_network","Map","e","_injectedProvider","source","window","origin","_providerUrl","_a","_popup","data","method","newPublicKey","params","publicKey","_publicKey","equals","handleDisconnect","_autoApprove","autoApprove","emit","result","error","promises","_responsePromises","get","id","resolve","reject","Error","disconnect","isInjectedProvider","isString","URL","hash","URLSearchParams","location","network","toString","handleConnect","_handlerAdded","addEventListener","handleMessage","_beforeUnload","Promise","sendRequest","name","open","once","removeEventListener","forEach","delete","connected","requestId","_nextRequestId","set","postMessage","jsonrpc","_b","_c","_d","focus","connect","close","sign","display","Uint8Array","response","signature","decode","signTransaction","transaction","message","encode","serializeMessage","addSignature","signAllTransactions","transactions","messages","map","tx","signatures","s","idx","diffieHellman","a","isObject"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}