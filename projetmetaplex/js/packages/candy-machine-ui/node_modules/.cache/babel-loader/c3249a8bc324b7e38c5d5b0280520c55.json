{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GatewayToken = exports.State = void 0;\n\nconst GatewayTokenData_1 = require(\"../lib/GatewayTokenData\");\n\nconst util_1 = require(\"../lib/util\");\n\nvar State;\n\n(function (State) {\n  State[\"ACTIVE\"] = \"ACTIVE\";\n  State[\"REVOKED\"] = \"REVOKED\";\n  State[\"FROZEN\"] = \"FROZEN\";\n})(State = exports.State || (exports.State = {}));\n\nclass GatewayToken {\n  constructor( //  the key used to reference the issuing gatekeeper\n  issuingGatekeeper, gatekeeperNetwork, owner, state, publicKey, programId, expiryTime) {\n    this.issuingGatekeeper = issuingGatekeeper;\n    this.gatekeeperNetwork = gatekeeperNetwork;\n    this.owner = owner;\n    this.state = state;\n    this.publicKey = publicKey;\n    this.programId = programId;\n    this.expiryTime = expiryTime;\n  }\n\n  isValid() {\n    return this.state === State.ACTIVE && !this.hasExpired();\n  }\n\n  hasExpired() {\n    const now = Math.floor(Date.now() / 1000);\n    return !!this.expiryTime && now > this.expiryTime;\n  }\n\n  static fromAccount(accountInfo, key) {\n    const parsedData = GatewayTokenData_1.GatewayTokenData.fromAccount(accountInfo.data);\n    return (0, util_1.dataToGatewayToken)(parsedData, key);\n  }\n\n  update(_ref) {\n    let {\n      state,\n      expiryTime\n    } = _ref;\n    return new GatewayToken(this.issuingGatekeeper, this.gatekeeperNetwork, this.owner, state, this.publicKey, this.programId, expiryTime || this.expiryTime);\n  }\n\n}\n\nexports.GatewayToken = GatewayToken;","map":{"version":3,"mappings":";;;;;;;AACA;;AACA;;AAMA,IAAYA,KAAZ;;AAAA,WAAYA,KAAZ,EAAiB;EACfA;EACAA;EACAA;AACD,CAJD,EAAYA,KAAK,GAALC,kCAAK,EAAL,CAAZ;;AAKA,MAAaC,YAAb,CAAyB;EACvBC,aACE;EACSC,iBAFX,EAGWC,iBAHX,EAIWC,KAJX,EAKWC,KALX,EAMWC,SANX,EAOWC,SAPX,EAQWC,UARX,EAQ8B;IANnB;IACA;IACA;IACA;IACA;IACA;IACA;EACP;;EAEJC,OAAO;IACL,OAAO,KAAKJ,KAAL,KAAeP,KAAK,CAACY,MAArB,IAA+B,CAAC,KAAKC,UAAL,EAAvC;EACD;;EAEOA,UAAU;IAChB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACH,GAAL,KAAa,IAAxB,CAAZ;IACA,OAAO,CAAC,CAAC,KAAKJ,UAAP,IAAqBI,GAAG,GAAG,KAAKJ,UAAvC;EACD;;EAEiB,OAAXQ,WAAW,CAChBC,WADgB,EAEhBC,GAFgB,EAEF;IAEd,MAAMC,UAAU,GAAGC,oCAAiBJ,WAAjB,CAA6BC,WAAW,CAACI,IAAzC,CAAnB;IACA,OAAO,+BAAmBF,UAAnB,EAA+BD,GAA/B,CAAP;EACD;;EAEMI,MAAM,OAMZ;IAAA,IANa;MACZjB,KADY;MAEZG;IAFY,CAMb;IACC,OAAO,IAAIR,YAAJ,CACL,KAAKE,iBADA,EAEL,KAAKC,iBAFA,EAGL,KAAKC,KAHA,EAILC,KAJK,EAKL,KAAKC,SALA,EAML,KAAKC,SANA,EAOLC,UAAU,IAAI,KAAKA,UAPd,CAAP;EASD;;AA7CsB;;AAAzBT","names":["State","exports","GatewayToken","constructor","issuingGatekeeper","gatekeeperNetwork","owner","state","publicKey","programId","expiryTime","isValid","ACTIVE","hasExpired","now","Math","floor","Date","fromAccount","accountInfo","key","parsedData","GatewayTokenData_1","data","update"],"sourceRoot":"","sources":["../../src/types/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}