{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletSignMessageError, WalletSignTransactionError, WalletTimeoutError, WalletWindowBlockedError, WalletWindowClosedError } from '@solana/wallet-adapter-base';\nexport class SolletWalletAdapter extends BaseMessageSignerWalletAdapter {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    this._disconnected = () => {\n      const wallet = this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', this._disconnected);\n        this._wallet = null;\n        this.emit('error', new WalletDisconnectedError());\n        this.emit('disconnect');\n      }\n    };\n\n    this._provider = config.provider || (typeof window === 'undefined' ? undefined : window.sollet);\n    this._network = config.network || WalletAdapterNetwork.Mainnet;\n    this._connecting = false;\n    this._wallet = null;\n    if (!this.ready) pollUntilReady(this, config.pollInterval || 1000, config.pollCount || 3);\n  }\n\n  get publicKey() {\n    var _a;\n\n    return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n  }\n\n  get ready() {\n    var _a;\n\n    return typeof this._provider === 'string' || typeof window !== 'undefined' && typeof ((_a = window.sollet) === null || _a === void 0 ? void 0 : _a.postMessage) === 'function';\n  }\n\n  get connecting() {\n    return this._connecting;\n  }\n\n  get connected() {\n    var _a;\n\n    return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n  }\n\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (this.connected || this.connecting) return;\n        this._connecting = true;\n        const provider = this._provider || typeof window !== 'undefined' && window.sollet;\n        if (!provider) throw new WalletNotFoundError();\n        let wallet;\n\n        try {\n          wallet = new Wallet(provider, this._network); // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup or extension is closed or blocked\n\n          const handleDisconnect = wallet.handleDisconnect;\n          let timeout;\n          let interval;\n\n          try {\n            yield new Promise((resolve, reject) => {\n              const connect = () => {\n                if (timeout) clearTimeout(timeout);\n                wallet.off('connect', connect);\n                resolve();\n              };\n\n              wallet.handleDisconnect = function () {\n                wallet.off('connect', connect);\n                reject(new WalletWindowClosedError());\n\n                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                return handleDisconnect.apply(wallet, args);\n              };\n\n              wallet.on('connect', connect);\n              wallet.connect().catch(reason => {\n                wallet.off('connect', connect);\n                reject(reason);\n              });\n\n              if (typeof provider === 'string') {\n                let count = 0;\n                interval = setInterval(() => {\n                  const popup = wallet._popup;\n\n                  if (popup) {\n                    if (popup.closed) reject(new WalletWindowClosedError());\n                  } else {\n                    if (count > 50) reject(new WalletWindowBlockedError());\n                  }\n\n                  count++;\n                }, 100);\n              } else {\n                // HACK: sol-wallet-adapter doesn't reject or emit an event if the extension is closed or ignored\n                timeout = setTimeout(() => reject(new WalletTimeoutError()), 10000);\n              }\n            });\n          } finally {\n            wallet.handleDisconnect = handleDisconnect;\n            if (interval) clearInterval(interval);\n          }\n        } catch (error) {\n          if (error instanceof WalletError) throw error;\n          throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n\n        wallet.on('disconnect', this._disconnected);\n        this._wallet = wallet;\n        this.emit('connect');\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      } finally {\n        this._connecting = false;\n      }\n    });\n  }\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const wallet = this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', this._disconnected);\n        this._wallet = null; // HACK: sol-wallet-adapter doesn't reliably fulfill its promise or emit an event on disconnect\n\n        const handleDisconnect = wallet.handleDisconnect;\n\n        try {\n          yield new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => resolve(), 250);\n\n            wallet.handleDisconnect = function () {\n              clearTimeout(timeout);\n              resolve(); // HACK: sol-wallet-adapter rejects with an uncaught promise error\n\n              wallet._responsePromises = new Map();\n\n              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n\n              return handleDisconnect.apply(wallet, args);\n            };\n\n            wallet.disconnect().then(() => {\n              clearTimeout(timeout);\n              resolve();\n            }, error => {\n              clearTimeout(timeout); // HACK: sol-wallet-adapter rejects with an error on disconnect\n\n              if ((error === null || error === void 0 ? void 0 : error.message) === 'Wallet disconnected') {\n                resolve();\n              } else {\n                reject(error);\n              }\n            });\n          });\n        } catch (error) {\n          this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n        } finally {\n          wallet.handleDisconnect = handleDisconnect;\n        }\n      }\n\n      this.emit('disconnect');\n    });\n  }\n\n  signTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const wallet = this._wallet;\n        if (!wallet) throw new WalletNotConnectedError();\n\n        try {\n          return (yield wallet.signTransaction(transaction)) || transaction;\n        } catch (error) {\n          throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      }\n    });\n  }\n\n  signAllTransactions(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const wallet = this._wallet;\n        if (!wallet) throw new WalletNotConnectedError();\n\n        try {\n          return (yield wallet.signAllTransactions(transactions)) || transactions;\n        } catch (error) {\n          throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      }\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const wallet = this._wallet;\n        if (!wallet) throw new WalletNotConnectedError();\n\n        try {\n          const {\n            signature\n          } = yield wallet.sign(message, 'utf8');\n          return Uint8Array.from(signature);\n        } catch (error) {\n          throw new WalletSignMessageError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      }\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Wallet","BaseMessageSignerWalletAdapter","pollUntilReady","WalletAdapterNetwork","WalletConnectionError","WalletDisconnectedError","WalletDisconnectionError","WalletError","WalletNotConnectedError","WalletNotFoundError","WalletSignMessageError","WalletSignTransactionError","WalletTimeoutError","WalletWindowBlockedError","WalletWindowClosedError","SolletWalletAdapter","constructor","config","wallet","_wallet","off","_disconnected","emit","_provider","provider","window","undefined","sollet","_network","network","Mainnet","_connecting","ready","pollInterval","pollCount","publicKey","_a","postMessage","connecting","connected","connect","handleDisconnect","timeout","interval","Promise","resolve","reject","clearTimeout","args","apply","on","catch","reason","count","setInterval","popup","_popup","closed","setTimeout","clearInterval","error","message","disconnect","_responsePromises","Map","then","signTransaction","transaction","signAllTransactions","transactions","signMessage","signature","sign","Uint8Array","from"],"sourceRoot":"","sources":["../src/adapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}