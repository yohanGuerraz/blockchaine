{"ast":null,"code":"var _a;\n/**\n * Returns true if being run inside a web browser,\n * false if in a Node process or electron app.\n */\n\n\nexport const isBrowser = typeof window !== \"undefined\" && !((_a = window.process) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(\"type\"));\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */\n\nexport function chunks(array, size) {\n  return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index) => array.slice(index * size, (index + 1) * size));\n}","map":{"version":3,"mappings":";AAAA;;;;;;AAIA,OAAO,MAAMA,SAAS,GACpB,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,EAAC,YAAM,CAACC,OAAP,MAAc,IAAd,IAAcC,aAAd,GAAc,MAAd,GAAcA,GAAEC,cAAF,CAAiB,MAAjB,CAAf,CAD5B;AAGP;;;;;;;;AAOA,OAAM,SAAUC,MAAV,CAAoBC,KAApB,EAAgCC,IAAhC,EAA4C;EAChD,OAAOC,KAAK,CAACC,KAAN,CACL,CADK,EAEL,IAAID,KAAJ,CAAUE,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,MAAN,GAAeL,IAAzB,CAAV,CAFK,EAGLM,GAHK,CAGD,CAACC,CAAD,EAAIC,KAAJ,KAAcT,KAAK,CAACU,KAAN,CAAYD,KAAK,GAAGR,IAApB,EAA0B,CAACQ,KAAK,GAAG,CAAT,IAAcR,IAAxC,CAHb,CAAP;AAID","names":["isBrowser","window","process","_a","hasOwnProperty","chunks","array","size","Array","apply","Math","ceil","length","map","_","index","slice"],"sourceRoot":"","sources":["../../../src/utils/common.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}