{"ast":null,"code":"import { IdlCoder } from \"./idl\";\n/**\n * Encodes and decodes user defined types.\n */\n\nexport class TypesCoder {\n  constructor(idl) {\n    if (idl.types === undefined) {\n      this.layouts = new Map();\n      return;\n    }\n\n    const types = idl.types;\n    const layouts = types.map(acc => {\n      return [acc.name, IdlCoder.typeDefLayout(acc, types)];\n    }); // @ts-ignore\n\n    this.layouts = new Map(layouts);\n  }\n\n  encode(accountName, account) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n\n    const layout = this.layouts.get(accountName);\n\n    if (!layout) {\n      throw new Error(`Unknown account type: ${accountName}`);\n    }\n\n    const len = layout.encode(account, buffer);\n    return buffer.slice(0, len);\n  }\n\n  decode(accountName, ix) {\n    const layout = this.layouts.get(accountName);\n\n    if (!layout) {\n      throw new Error(`Unknown account type: ${accountName}`);\n    }\n\n    return layout.decode(ix);\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAASA,QAAT,QAAyB,OAAzB;AAEA;;;;AAGA,OAAM,MAAOC,UAAP,CAAiB;EAMrBC,YAAmBC,GAAnB,EAA2B;IACzB,IAAIA,GAAG,CAACC,KAAJ,KAAcC,SAAlB,EAA6B;MAC3B,KAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;MACA;IACD;;IACD,MAAMH,KAAK,GAAGD,GAAG,CAACC,KAAlB;IACA,MAAME,OAAO,GAAGF,KAAK,CAACI,GAAN,CAAWC,GAAD,IAAQ;MAChC,OAAO,CAACA,GAAG,CAACC,IAAL,EAAWV,QAAQ,CAACW,aAAT,CAAuBF,GAAvB,EAA4BL,KAA5B,CAAX,CAAP;IACD,CAFe,CAAhB,CANyB,CAUzB;;IACA,KAAKE,OAAL,GAAe,IAAIC,GAAJ,CAAQD,OAAR,CAAf;EACD;;EAEMM,MAAM,CAAUC,WAAV,EAA+BC,OAA/B,EAAyC;IACpD,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa,IAAb,CAAf,CADoD,CACjB;;IACnC,MAAMC,MAAM,GAAG,KAAKZ,OAAL,CAAaa,GAAb,CAAiBN,WAAjB,CAAf;;IACA,IAAI,CAACK,MAAL,EAAa;MACX,MAAM,IAAIE,KAAJ,CAAU,yBAAyBP,WAAW,EAA9C,CAAN;IACD;;IACD,MAAMQ,GAAG,GAAGH,MAAM,CAACN,MAAP,CAAcE,OAAd,EAAuBC,MAAvB,CAAZ;IACA,OAAOA,MAAM,CAACO,KAAP,CAAa,CAAb,EAAgBD,GAAhB,CAAP;EACD;;EAEME,MAAM,CAAUV,WAAV,EAA+BW,EAA/B,EAAyC;IACpD,MAAMN,MAAM,GAAG,KAAKZ,OAAL,CAAaa,GAAb,CAAiBN,WAAjB,CAAf;;IACA,IAAI,CAACK,MAAL,EAAa;MACX,MAAM,IAAIE,KAAJ,CAAU,yBAAyBP,WAAW,EAA9C,CAAN;IACD;;IACD,OAAOK,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAP;EACD;;AApCoB","names":["IdlCoder","TypesCoder","constructor","idl","types","undefined","layouts","Map","map","acc","name","typeDefLayout","encode","accountName","account","buffer","Buffer","alloc","layout","get","Error","len","slice","decode","ix"],"sourceRoot":"","sources":["../../../src/coder/types.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}