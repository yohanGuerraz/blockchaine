{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar _a;\n\nimport semver from \"semver\";\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\n\nexport var IIGenericHID = 0x01;\nexport var IIKeyboardHID = 0x02;\nexport var IIU2F = 0x04;\nexport var IICCID = 0x08;\nexport var IIWebUSB = 0x10;\nexport var DeviceModelId;\n\n(function (DeviceModelId) {\n  DeviceModelId[\"blue\"] = \"blue\";\n  DeviceModelId[\"nanoS\"] = \"nanoS\";\n  DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n  DeviceModelId[\"nanoX\"] = \"nanoX\";\n})(DeviceModelId || (DeviceModelId = {}));\n\nvar devices = (_a = {}, _a[DeviceModelId.blue] = {\n  id: DeviceModelId.blue,\n  productName: \"Ledger Blue\",\n  productIdMM: 0x00,\n  legacyUsbProductId: 0x0000,\n  usbOnly: true,\n  memorySize: 480 * 1024,\n  masks: [0x31000000, 0x31010000],\n  getBlockSize: function (_firwareVersion) {\n    return 4 * 1024;\n  }\n}, _a[DeviceModelId.nanoS] = {\n  id: DeviceModelId.nanoS,\n  productName: \"Ledger Nano S\",\n  productIdMM: 0x10,\n  legacyUsbProductId: 0x0001,\n  usbOnly: true,\n  memorySize: 320 * 1024,\n  masks: [0x31100000],\n  getBlockSize: function (firmwareVersion) {\n    var _a;\n\n    return semver.lt((_a = semver.coerce(firmwareVersion)) !== null && _a !== void 0 ? _a : \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024;\n  }\n}, _a[DeviceModelId.nanoSP] = {\n  id: DeviceModelId.nanoSP,\n  productName: \"Ledger Nano SP\",\n  productIdMM: 0x50,\n  legacyUsbProductId: 0x0005,\n  usbOnly: true,\n  memorySize: 1533 * 1024,\n  masks: [0x33100000],\n  getBlockSize: function (_firmwareVersion) {\n    return 32;\n  }\n}, _a[DeviceModelId.nanoX] = {\n  id: DeviceModelId.nanoX,\n  productName: \"Ledger Nano X\",\n  productIdMM: 0x40,\n  legacyUsbProductId: 0x0004,\n  usbOnly: false,\n  memorySize: 2 * 1024 * 1024,\n  masks: [0x33000000],\n  getBlockSize: function (_firwareVersion) {\n    return 4 * 1024;\n  },\n  bluetoothSpec: [{\n    // this is the legacy one (prototype version). we will eventually drop it.\n    serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n    notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n    writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n    writeCmdUuid: \"d973f2e3-b19e-11e2-9e96-0800200c9a66\"\n  }, {\n    serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n    notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n    writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n    writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\"\n  }]\n}, _a);\nvar productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano X\": DeviceModelId.nanoX\n};\nvar devicesList = Object.values(devices);\n/**\n *\n */\n\nexport var ledgerUSBVendorId = 0x2c97;\n/**\n *\n */\n\nexport var getDeviceModel = function (id) {\n  var info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\n\nexport var identifyTargetId = function (targetId) {\n  var deviceModel = devicesList.find(function (_a) {\n    var masks = _a.masks;\n    return masks.find(function (mask) {\n      return (targetId & 0xffff0000) === mask;\n    });\n  });\n  return deviceModel;\n};\n/**\n *\n */\n\nexport var identifyUSBProductId = function (usbProductId) {\n  var legacy = devicesList.find(function (d) {\n    return d.legacyUsbProductId === usbProductId;\n  });\n  if (legacy) return legacy;\n  var mm = usbProductId >> 8;\n  var deviceModel = devicesList.find(function (d) {\n    return d.productIdMM === mm;\n  });\n  return deviceModel;\n};\nexport var identifyProductName = function (productName) {\n  var productId = productMap[productName];\n\n  if (!productId && productName.startsWith(\"Nano S\")) {\n    productId = DeviceModelId.nanoSP;\n  }\n\n  var deviceModel = devicesList.find(function (d) {\n    return d.id === productId;\n  });\n  return deviceModel;\n};\nvar bluetoothServices = [];\nvar serviceUuidToInfos = {};\n\nfor (var id in devices) {\n  var deviceModel = devices[id];\n  var bluetoothSpec = deviceModel.bluetoothSpec;\n\n  if (bluetoothSpec) {\n    for (var i = 0; i < bluetoothSpec.length; i++) {\n      var spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = __assign({\n        deviceModel: deviceModel\n      }, spec);\n    }\n  }\n}\n/**\n *\n */\n\n\nexport var getBluetoothServiceUuids = function () {\n  return bluetoothServices;\n};\n/**\n *\n */\n\nexport var getInfosForServiceUuid = function (uuid) {\n  return serviceUuidToInfos[uuid.toLowerCase()];\n};","map":{"version":3,"mappings":"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","names":["semver","IIGenericHID","IIKeyboardHID","IIU2F","IICCID","IIWebUSB","DeviceModelId","devices","_a","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","lt","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","productMap","Blue","devicesList","Object","values","ledgerUSBVendorId","getDeviceModel","info","Error","identifyTargetId","targetId","deviceModel","find","mask","identifyUSBProductId","usbProductId","legacy","d","mm","identifyProductName","productId","startsWith","bluetoothServices","serviceUuidToInfos","i","length","spec","push","replace","__assign","getBluetoothServiceUuids","getInfosForServiceUuid","uuid","toLowerCase"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}